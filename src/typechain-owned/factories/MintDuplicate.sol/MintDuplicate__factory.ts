/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  MintDuplicate,
  MintDuplicateInterface,
} from "../../MintDuplicate.sol/MintDuplicate";
import type { PromiseOrValue } from "../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseTokenURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DexRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FeeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewardsTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cost",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "imageURL",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct MintDuplicate.MintedNftStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getReflectionBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getReflectionBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getTokenIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "isAddressMinted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lastDividendAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintOnce",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "minters",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_winner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "randomGiveaway",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reflectToOwners",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "reflectionBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "remainingIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newDexRouter",
        type: "address",
      },
    ],
    name: "setDexRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenExtension",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDividend",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newFeeReceiver",
        type: "address",
      },
    ],
    name: "upateFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseTokenURI_",
        type: "string",
      },
    ],
    name: "updateBaseTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newCost",
        type: "uint256",
      },
    ],
    name: "updateCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "imageURI_",
        type: "string",
      },
    ],
    name: "updateImageURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "mintOnce_",
        type: "bool",
      },
    ],
    name: "updateMintOnce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRewardToken",
        type: "address",
      },
    ],
    name: "updateRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newBaseExtension",
        type: "string",
      },
    ],
    name: "updateTokenExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newmaxMintAmount",
        type: "uint256",
      },
    ],
    name: "updatemaxMintAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040526005608090815264173539b7b760d91b60a052600b9062000026908262000288565b506000600c819055600d556103e8600e556001600f8190556103fc805461ffff1916909117905561040080546001600160a01b03199081167310ed43c718714eb63d5aa57b78b54704e256024e1790915561040180548216737919f2f49102d7f2d7d9e9935e26bbd727711b731790556104028054909116733c3cb22d555523bb85f2a76cbff8acbbb54332dc179055348015620000c357600080fd5b5060405162003a2b38038062003a2b833981016040819052620000e69162000403565b83836000620000f6838262000288565b50600162000105828262000288565b505050620001226200011c6200018d60201b60201c565b62000191565b6103fd62000131838262000288565b506103fe62000141828262000288565b50506103ff80546001600160a01b0319908116331790915561040054610403805483166001600160a01b03928316179055610401546104048054909316911617905550620004bc915050565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200020e57607f821691505b6020821081036200022f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200028357600081815260208120601f850160051c810160208610156200025e5750805b601f850160051c820191505b818110156200027f578281556001016200026a565b5050505b505050565b81516001600160401b03811115620002a457620002a4620001e3565b620002bc81620002b58454620001f9565b8462000235565b602080601f831160018114620002f45760008415620002db5750858301515b600019600386901b1c1916600185901b1785556200027f565b600085815260208120601f198616915b82811015620003255788860151825594840194600190910190840162000304565b5085821015620003445787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082601f8301126200036657600080fd5b81516001600160401b0380821115620003835762000383620001e3565b604051601f8301601f19908116603f01168101908282118183101715620003ae57620003ae620001e3565b81604052838152602092508683858801011115620003cb57600080fd5b600091505b83821015620003ef5785820183015181830184015290820190620003d0565b600093810190920192909252949350505050565b600080600080608085870312156200041a57600080fd5b84516001600160401b03808211156200043257600080fd5b620004408883890162000354565b955060208701519150808211156200045757600080fd5b620004658883890162000354565b945060408701519150808211156200047c57600080fd5b6200048a8883890162000354565b93506060870151915080821115620004a157600080fd5b50620004b08782880162000354565b91505092959194509250565b61355f80620004cc6000396000f3fe6080604052600436106103695760003560e01c8063736ce0d4116101c6578063d2068857116100f7578063f1e9f1e511610095578063f75b8c5f1161006f578063f75b8c5f146109ee578063f887ea4014610a04578063f8cf31cb14610a25578063fc0c546a14610a4557600080fd5b8063f1e9f1e51461098d578063f2fde38b146109ae578063f72f863b146109ce57600080fd5b8063e0cab8c7116100d1578063e0cab8c7146108e4578063e7e0cb6714610904578063e985e9c514610924578063ee6d9d6d1461096d57600080fd5b8063d20688571461087e578063d5abeb01146108ac578063e0391b09146108c257600080fd5b8063a22cb46511610164578063b3ef77f21161013e578063b3ef77f2146107f1578063b88d4fde14610811578063c87b56dd14610831578063d004b0361461085157600080fd5b8063a22cb46514610791578063a708d404146107b1578063afc6ef60146107d157600080fd5b80638626613b116101a05780638626613b1461072b5780638da5cb5b1461074b57806395d89b4114610769578063a0712d681461077e57600080fd5b8063736ce0d4146106be5780637bff43e1146106df5780638623ec7b146106f457600080fd5b80632f745c59116102a057806353891fcd1161023e578063655391c911610218578063655391c9146106495780636bdfbb351461066957806370a0823114610689578063715018a6146106a957600080fd5b806353891fcd146105ee5780635c975abb1461060e5780636352211e1461062957600080fd5b806349edaf401161027a57806349edaf40146105835780634b6acafb146105a35780634f6ccce7146105b9578063521133d1146105d957600080fd5b80632f745c591461052d5780634131ff991461054d57806342842e0e1461056357600080fd5b8063095ea7b31161030d57806318160ddd116102e757806318160ddd146104c2578063239c70ae146104d757806323b872dd146104ed57806323c5a0881461050d57600080fd5b8063095ea7b31461047657806313faede614610496578063174f57af146104ac57600080fd5b806302329a291161034957806302329a291461040a578063047d5e801461042c57806306fdde0314610434578063081812fc1461045657600080fd5b80620251641461036e578062fe50c6146103ac57806301ffc9a7146103da575b600080fd5b34801561037a57600080fd5b506104025461038f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156103b857600080fd5b506103cc6103c7366004612bfb565b610a66565b6040519081526020016103a3565b3480156103e657600080fd5b506103fa6103f5366004612c2a565b610a88565b60405190151581526020016103a3565b34801561041657600080fd5b5061042a610425366004612c55565b610aad565b005b61042a610af4565b34801561044057600080fd5b50610449610aff565b6040516103a39190612cc2565b34801561046257600080fd5b5061038f610471366004612bfb565b610b91565b34801561048257600080fd5b5061042a610491366004612cea565b610c26565b3480156104a257600080fd5b506103cc600c5481565b3480156104b857600080fd5b506103cc600d5481565b3480156104ce57600080fd5b506008546103cc565b3480156104e357600080fd5b506103cc600f5481565b3480156104f957600080fd5b5061042a610508366004612d16565b610d3b565b34801561051957600080fd5b5061042a610528366004612bfb565b610d6c565b34801561053957600080fd5b506103cc610548366004612cea565b610d9b565b34801561055957600080fd5b506103cc60105481565b34801561056f57600080fd5b5061042a61057e366004612d16565b610e31565b34801561058f57600080fd5b5061042a61059e366004612c55565b610e4c565b3480156105af57600080fd5b506103cc60115481565b3480156105c557600080fd5b506103cc6105d4366004612bfb565b610e91565b3480156105e557600080fd5b5061042a610f24565b3480156105fa57600080fd5b5061042a610609366004612de3565b611248565b34801561061a57600080fd5b506103fc546103fa9060ff1681565b34801561063557600080fd5b5061038f610644366004612bfb565b611283565b34801561065557600080fd5b5061042a610664366004612de3565b6112fa565b34801561067557600080fd5b506103fc546103fa90610100900460ff1681565b34801561069557600080fd5b506103cc6106a4366004612e2c565b611331565b3480156106b557600080fd5b5061042a6113b8565b3480156106ca57600080fd5b506104005461038f906001600160a01b031681565b3480156106eb57600080fd5b506104496113ec565b34801561070057600080fd5b5061038f61070f366004612bfb565b6103fb602052600090815260409020546001600160a01b031681565b34801561073757600080fd5b5061042a610746366004612de3565b61147a565b34801561075757600080fd5b50600a546001600160a01b031661038f565b34801561077557600080fd5b506104496114b0565b61042a61078c366004612bfb565b6114bf565b34801561079d57600080fd5b5061042a6107ac366004612e49565b611795565b3480156107bd57600080fd5b506103cc6107cc366004612e2c565b611859565b3480156107dd57600080fd5b506103fa6107ec366004612e2c565b6118ab565b3480156107fd57600080fd5b5061042a61080c366004612cea565b611916565b34801561081d57600080fd5b5061042a61082c366004612e82565b611a5c565b34801561083d57600080fd5b5061044961084c366004612bfb565b611a94565b34801561085d57600080fd5b5061087161086c366004612e2c565b611b5a565b6040516103a39190612f02565b34801561088a57600080fd5b506103cc610899366004612bfb565b6103fa6020526000908152604090205481565b3480156108b857600080fd5b506103cc6103e881565b3480156108ce57600080fd5b506108d7611bf4565b6040516103a39190612f46565b3480156108f057600080fd5b5061042a6108ff366004612bfb565b611d1b565b34801561091057600080fd5b5061042a61091f366004612e2c565b611d4a565b34801561093057600080fd5b506103fa61093f366004612fe9565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561097957600080fd5b506103cc610988366004612bfb565b611d97565b34801561099957600080fd5b506104015461038f906001600160a01b031681565b3480156109ba57600080fd5b5061042a6109c9366004612e2c565b611daf565b3480156109da57600080fd5b5061042a6109e9366004612e2c565b611e4a565b3480156109fa57600080fd5b506103cc600e5481565b348015610a1057600080fd5b506104035461038f906001600160a01b031681565b348015610a3157600080fd5b5061042a610a40366004612e2c565b611ea2565b348015610a5157600080fd5b506104045461038f906001600160a01b031681565b60008181526103fa6020526040812054601154610a8291611efa565b92915050565b60006001600160e01b0319821663780e9d6360e01b1480610a825750610a8282611f06565b600a546001600160a01b03163314610ae05760405162461bcd60e51b8152600401610ad790613017565b60405180910390fd5b6103fc805460ff1916911515919091179055565b610afd34611f56565b565b606060008054610b0e9061304c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3a9061304c565b8015610b875780601f10610b5c57610100808354040283529160200191610b87565b820191906000526020600020905b815481529060010190602001808311610b6a57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610c0a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610ad7565b506000908152600460205260409020546001600160a01b031690565b6000610c3182611283565b9050806001600160a01b0316836001600160a01b031603610c9e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610ad7565b336001600160a01b0382161480610cba5750610cba813361093f565b610d2c5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610ad7565b610d368383611f8b565b505050565b610d453382611ff9565b610d615760405162461bcd60e51b8152600401610ad790613086565b610d368383836120f0565b600a546001600160a01b03163314610d965760405162461bcd60e51b8152600401610ad790613017565b600c55565b6000610da683611331565b8210610e085760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610ad7565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b610d3683838360405180602001604052806000815250611a5c565b600a546001600160a01b03163314610e765760405162461bcd60e51b8152600401610ad790613017565b6103fc80549115156101000261ff0019909216919091179055565b6000610e9c60085490565b8210610eff5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610ad7565b60088281548110610f1257610f126130d7565b90600052602060002001549050919050565b6000610f2f33611331565b610404546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610f7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa291906130ed565b90506000805b83811015610ffc576000610fbc3383610d9b565b9050610fd1610fca82610a66565b849061229b565b60115460009283526103fa602052604090922091909155915080610ff48161311c565b915050610fa8565b50604080516002808252606082018352600092602083019080368337505061040354604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa158015611068573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108c9190613135565b8160008151811061109f5761109f6130d7565b6001600160a01b039283166020918202929092010152610401548251911690829060019081106110d1576110d16130d7565b6001600160a01b0392831660209182029290920101526104035460405163b6f9de9560e01b815291169063b6f9de9590849061111890600090869030904290600401613152565b6000604051808303818588803b15801561113157600080fd5b505af1158015611145573d6000803e3d6000fd5b5050610404546040516370a0823160e01b8152306004820152600094506001600160a01b0390911692506370a082319150602401602060405180830381865afa158015611196573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ba91906130ed565b905060006111c88286611efa565b6104045460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561121b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123f91906131bc565b50505050505050565b600a546001600160a01b031633146112725760405162461bcd60e51b8152600401610ad790613017565b6103fe61127f8282613227565b5050565b6000818152600260205260408120546001600160a01b031680610a825760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610ad7565b600a546001600160a01b031633146113245760405162461bcd60e51b8152600401610ad790613017565b6103fd61127f8282613227565b60006001600160a01b03821661139c5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610ad7565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b031633146113e25760405162461bcd60e51b8152600401610ad790613017565b610afd60006122a7565b600b80546113f99061304c565b80601f01602080910402602001604051908101604052809291908181526020018280546114259061304c565b80156114725780601f1061144757610100808354040283529160200191611472565b820191906000526020600020905b81548152906001019060200180831161145557829003601f168201915b505050505081565b600a546001600160a01b031633146114a45760405162461bcd60e51b8152600401610ad790613017565b600b61127f8282613227565b606060018054610b0e9061304c565b6103fc5460ff16156115135760405162461bcd60e51b815260206004820152601b60248201527f4d696e74696e6720686173206e6f7420737461727465642079657400000000006044820152606401610ad7565b600081116115635760405162461bcd60e51b815260206004820152601d60248201527f596f75206861766520746f206d696e74206174206c65617374206f6e650000006044820152606401610ad7565b600f54811115611574600f546122f9565b60405160200161158491906132e7565b604051602081830303815290604052906115b15760405162461bcd60e51b8152600401610ad79190612cc2565b5080600e5410156116045760405162461bcd60e51b815260206004820152601a60248201527f54686520636f6c6c656374696f6e20697320736f6c64206f75740000000000006044820152606401610ad7565b600a546001600160a01b0316331461166c5780600c546116249190613335565b34101561166c5760405162461bcd60e51b81526020600482015260166024820152750a8dee8c2d840c6dee6e840d2e6dc4ee840dac2e8c6d60531b6044820152606401610ad7565b6103fc54610100900460ff16156116e157611686336118ab565b156116e15760405162461bcd60e51b815260206004820152602560248201527f5468697320616464726573732068617320616c7265616479206d696e746564206044820152643a37b5b2b760d91b6064820152608401610ad7565b60015b81811161172f5760006116f78334613362565b90506000611704336123fa565b905061170f826124ce565b61171a338284612544565b505080806117279061311c565b9150506116e4565b50506040805160208101909152338152610406805460018101825560009190915290517fa0d0b4dc8adb7cc76fb071ab136c926323a80f352d6bbf94a08732095e1cddd390910180546001600160a01b0319166001600160a01b03909216919091179055565b336001600160a01b038316036117ed5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610ad7565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60008061186583611331565b90506000805b828110156118a357600061187f8683610d9b565b905061188d610fca82610a66565b925050808061189b9061311c565b91505061186b565b509392505050565b6000805b6104065481101561190d57826001600160a01b031661040682815481106118d8576118d86130d7565b6000918252602090912001546001600160a01b0316036118fb5750600192915050565b806119058161311c565b9150506118af565b50600092915050565b600a546001600160a01b031633146119405760405162461bcd60e51b8152600401610ad790613017565b6001600160a01b0382166119855760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b6044820152606401610ad7565b600081116119d55760405162461bcd60e51b815260206004820152601d60248201527f596f75206861766520746f206d696e74206174206c65617374206f6e650000006044820152606401610ad7565b600e54600003611a275760405162461bcd60e51b815260206004820152601a60248201527f54686520636f6c6c656374696f6e20697320736f6c64206f75740000000000006044820152606401610ad7565b60015b818111610d36576000611a3c846123fa565b9050611a49848285612544565b5080611a548161311c565b915050611a2a565b611a663383611ff9565b611a825760405162461bcd60e51b8152600401610ad790613086565b611a8e8484848461267f565b50505050565b6000818152600260205260409020546060906001600160a01b0316611afb5760405162461bcd60e51b815260206004820152601f60248201527f55524920717565727920666f72206e6f6e6578697374656e7420746f6b656e006044820152606401610ad7565b6000611b056126b2565b90506000815111611b255760405180602001604052806000815250611b53565b80611b2f846122f9565b600b604051602001611b4393929190613376565b6040516020818303038152906040525b9392505050565b60606000611b6783611331565b905060008167ffffffffffffffff811115611b8457611b84612d57565b604051908082528060200260200182016040528015611bad578160200160208202803683370190505b50905060005b828110156118a357611bc58582610d9b565b828281518110611bd757611bd76130d7565b602090810291909101015280611bec8161311c565b915050611bb3565b6060610405805480602002602001604051908101604052809291908181526020016000905b82821015611d125760008481526020908190206040805160a081018252600586029092018054835260018101546001600160a01b031693830193909352600283015490820152600382018054919291606084019190611c779061304c565b80601f0160208091040260200160405190810160405280929190818152602001828054611ca39061304c565b8015611cf05780601f10611cc557610100808354040283529160200191611cf0565b820191906000526020600020905b815481529060010190602001808311611cd357829003601f168201915b5050505050815260200160048201548152505081526020019060010190611c19565b50505050905090565b600a546001600160a01b03163314611d455760405162461bcd60e51b8152600401610ad790613017565b600f55565b600a546001600160a01b03163314611d745760405162461bcd60e51b8152600401610ad790613017565b61040280546001600160a01b0319166001600160a01b0392909216919091179055565b6012816103e88110611da857600080fd5b0154905081565b600a546001600160a01b03163314611dd95760405162461bcd60e51b8152600401610ad790613017565b6001600160a01b038116611e3e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610ad7565b611e47816122a7565b50565b600a546001600160a01b03163314611e745760405162461bcd60e51b8152600401610ad790613017565b61040080546001600160a01b039092166001600160a01b031992831681179091556104038054909216179055565b600a546001600160a01b03163314611ecc5760405162461bcd60e51b8152600401610ad790613017565b61040180546001600160a01b039092166001600160a01b031992831681179091556104048054909216179055565b6000611b538284613416565b60006001600160e01b031982166380ac58cd60e01b1480611f3757506001600160e01b03198216635b5e139f60e01b145b80610a8257506301ffc9a760e01b6001600160e01b0319831614610a82565b601054611f63908261229b565b601055611f85611f7c611f7560085490565b83906126c2565b6011549061229b565b60115550565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611fc082611283565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166120725760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610ad7565b600061207d83611283565b9050806001600160a01b0316846001600160a01b031614806120b85750836001600160a01b03166120ad84610b91565b6001600160a01b0316145b806120e857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661210382611283565b6001600160a01b03161461216b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610ad7565b6001600160a01b0382166121cd5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610ad7565b6121d88383836126ce565b6121e3600082611f8b565b6001600160a01b038316600090815260036020526040812080546001929061220c908490613416565b90915550506001600160a01b038216600090815260036020526040812080546001929061223a908490613429565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000611b538284613429565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060816000036123205750506040805180820190915260018152600360fc1b602082015290565b8160005b811561234a57806123348161311c565b91506123439050600a83613362565b9150612324565b60008167ffffffffffffffff81111561236557612365612d57565b6040519080825280601f01601f19166020018201604052801561238f576020820181803683370190505b5090505b84156120e8576123a4600183613416565b91506123b1600a8661343c565b6123bc906030613429565b60f81b8183815181106123d1576123d16130d7565b60200101906001600160f81b031916908160001a9053506123f3600a86613362565b9450612393565b600e546040805144602080830191909152428284015260608083018590528351808403909101815260809092019092528051910120600091829161243e919061343c565b9050600061244b82612786565b612456906001613429565b600e8054919250600061246883613450565b9190505550612478600e54612786565b6012836103e8811061248c5761248c6130d7565b015561249884826127c3565b60008181526103fb6020908152604080832080546001600160a01b031916331790556011546103fa909252909120559392505050565b60006124f060646124ea600d54856127dd90919063ffffffff16565b906126c2565b905060006124fe8383611efa565b905061250982611f56565b610402546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611a8e573d6000803e3d6000fd5b60004290506104056040518060a00160405280858152602001866001600160a01b031681526020018481526020016103fe80546125809061304c565b80601f01602080910402602001604051908101604052809291908181526020018280546125ac9061304c565b80156125f95780601f106125ce576101008083540402835291602001916125f9565b820191906000526020600020905b8154815290600101906020018083116125dc57829003601f168201915b5050509183525050602090810184905282546001808201855560009485529382902083516005909202019081559082015192810180546001600160a01b0319166001600160a01b0390941693909317909255604081015160028301556060810151909190600382019061266c9082613227565b5060808201518160040155505050505050565b61268a8484846120f0565b612696848484846127e9565b611a8e5760405162461bcd60e51b8152600401610ad790613467565b60606103fd8054610b0e9061304c565b6000611b538284613362565b6001600160a01b0383166127295761272481600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61274c565b816001600160a01b0316836001600160a01b03161461274c5761274c83826128ea565b6001600160a01b03821661276357610d3681612987565b826001600160a01b0316826001600160a01b031614610d3657610d368282612a36565b60006012826103e8811061279c5761279c6130d7565b0154156127bf576012826103e881106127b7576127b76130d7565b015492915050565b5090565b61127f828260405180602001604052806000815250612a7a565b6000611b538284613335565b60006001600160a01b0384163b156128df57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061282d9033908990889088906004016134b9565b6020604051808303816000875af1925050508015612868575060408051601f3d908101601f19168201909252612865918101906134f6565b60015b6128c5573d808015612896576040519150601f19603f3d011682016040523d82523d6000602084013e61289b565b606091505b5080516000036128bd5760405162461bcd60e51b8152600401610ad790613467565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506120e8565b506001949350505050565b600060016128f784611331565b6129019190613416565b600083815260076020526040902054909150808214612954576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061299990600190613416565b600083815260096020526040812054600880549394509092849081106129c1576129c16130d7565b9060005260206000200154905080600883815481106129e2576129e26130d7565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612a1a57612a1a613513565b6001900381819060005260206000200160009055905550505050565b6000612a4183611331565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b612a848383612aad565b612a9160008484846127e9565b610d365760405162461bcd60e51b8152600401610ad790613467565b6001600160a01b038216612b035760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610ad7565b6000818152600260205260409020546001600160a01b031615612b685760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610ad7565b612b74600083836126ce565b6001600160a01b0382166000908152600360205260408120805460019290612b9d908490613429565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600060208284031215612c0d57600080fd5b5035919050565b6001600160e01b031981168114611e4757600080fd5b600060208284031215612c3c57600080fd5b8135611b5381612c14565b8015158114611e4757600080fd5b600060208284031215612c6757600080fd5b8135611b5381612c47565b60005b83811015612c8d578181015183820152602001612c75565b50506000910152565b60008151808452612cae816020860160208601612c72565b601f01601f19169290920160200192915050565b602081526000611b536020830184612c96565b6001600160a01b0381168114611e4757600080fd5b60008060408385031215612cfd57600080fd5b8235612d0881612cd5565b946020939093013593505050565b600080600060608486031215612d2b57600080fd5b8335612d3681612cd5565b92506020840135612d4681612cd5565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612d8857612d88612d57565b604051601f8501601f19908116603f01168101908282118183101715612db057612db0612d57565b81604052809350858152868686011115612dc957600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215612df557600080fd5b813567ffffffffffffffff811115612e0c57600080fd5b8201601f81018413612e1d57600080fd5b6120e884823560208401612d6d565b600060208284031215612e3e57600080fd5b8135611b5381612cd5565b60008060408385031215612e5c57600080fd5b8235612e6781612cd5565b91506020830135612e7781612c47565b809150509250929050565b60008060008060808587031215612e9857600080fd5b8435612ea381612cd5565b93506020850135612eb381612cd5565b925060408501359150606085013567ffffffffffffffff811115612ed657600080fd5b8501601f81018713612ee757600080fd5b612ef687823560208401612d6d565b91505092959194509250565b6020808252825182820181905260009190848201906040850190845b81811015612f3a57835183529284019291840191600101612f1e565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015612fdb57888303603f19018552815180518452878101516001600160a01b031688850152868101518785015260608082015160a08287018190529190612fb983880182612c96565b6080948501519790940196909652505094870194925090860190600101612f6d565b509098975050505050505050565b60008060408385031215612ffc57600080fd5b823561300781612cd5565b91506020830135612e7781612cd5565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061306057607f821691505b60208210810361308057634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156130ff57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60006001820161312e5761312e613106565b5060010190565b60006020828403121561314757600080fd5b8151611b5381612cd5565b600060808201868352602060808185015281875180845260a086019150828901935060005b8181101561319c5784516001600160a01b031683529383019391830191600101613177565b50506001600160a01b039690961660408501525050506060015292915050565b6000602082840312156131ce57600080fd5b8151611b5381612c47565b601f821115610d3657600081815260208120601f850160051c810160208610156132005750805b601f850160051c820191505b8181101561321f5782815560010161320c565b505050505050565b815167ffffffffffffffff81111561324157613241612d57565b6132558161324f845461304c565b846131d9565b602080601f83116001811461328a57600084156132725750858301515b600019600386901b1c1916600185901b17855561321f565b600085815260208120601f198616915b828110156132b95788860151825594840194600190910190840161329a565b50858210156132d75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b7102cb7ba9031b0b71037b7363c9036b4b73a160751b815260008251613314816012850160208701612c72565b6920617420612074696d6560b01b6012939091019283015250601c01919050565b8082028115828204841417610a8257610a82613106565b634e487b7160e01b600052601260045260246000fd5b6000826133715761337161334c565b500490565b6000845160206133898285838a01612c72565b85519184019161339c8184848a01612c72565b85549201916000906133ad8161304c565b600182811680156133c557600181146133da57613406565b60ff1984168752821515830287019450613406565b896000528560002060005b848110156133fe578154898201529083019087016133e5565b505082870194505b50929a9950505050505050505050565b81810381811115610a8257610a82613106565b80820180821115610a8257610a82613106565b60008261344b5761344b61334c565b500690565b60008161345f5761345f613106565b506000190190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906134ec90830184612c96565b9695505050505050565b60006020828403121561350857600080fd5b8151611b5381612c14565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220a203b22873cf7fc95bb4ea1e13cffefbdbdd97e453ae433b4c938f0bad8ce87364736f6c63430008110033";

type MintDuplicateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MintDuplicateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MintDuplicate__factory extends ContractFactory {
  constructor(...args: MintDuplicateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    baseTokenURI: PromiseOrValue<string>,
    imageURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MintDuplicate> {
    return super.deploy(
      name,
      symbol,
      baseTokenURI,
      imageURI,
      overrides || {}
    ) as Promise<MintDuplicate>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    baseTokenURI: PromiseOrValue<string>,
    imageURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      baseTokenURI,
      imageURI,
      overrides || {}
    );
  }
  override attach(address: string): MintDuplicate {
    return super.attach(address) as MintDuplicate;
  }
  override connect(signer: Signer): MintDuplicate__factory {
    return super.connect(signer) as MintDuplicate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MintDuplicateInterface {
    return new utils.Interface(_abi) as MintDuplicateInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MintDuplicate {
    return new Contract(address, _abi, signerOrProvider) as MintDuplicate;
  }
}
